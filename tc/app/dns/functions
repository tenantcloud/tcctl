#!/usr/bin/env bash

# shellcheck disable=SC2140,SC2002,SC1090

source "$CLI_DIR/tc/framework/functions"

function _get_all_custom_dns_name_from_nginx() {
  array=$(find /usr/local/etc/nginx/servers -regex '.*\tc.loc.conf\.*' \
  | sed '/socket.tc.loc.conf/d' | sed '/home.tc.loc.conf/d';)
  if [[ "$array" ]]; then
    _message "You must delete all custom domains and restart nginx server:"
    for i in "${array[@]}"; do
      _message "$i" | cut -d/ -f '7' | sed '/socket.tc.loc.conf/d' | sed '/home.tc.loc.conf/d';
    done
  fi
}

function _cert_gen() {
  __dns_name=$1
  __dns_names=$2
  __root_cert_path=$3
  __root_key_path=$4
  __cert_path=$5
  __key_path=$6
  __csr_path=$7
  git -C /tmp clone https://github.com/devilbox/cert-gen.git
  __command="/tmp/cert-gen/bin/cert-gen -v -c UA -s Ivano-Frankivsk -l Ivano-Frankivsk -o TC -u TC \
             -n ${__dns_name} -e i.bronovskyi@root.devops \
             -a ${__dns_names} \
             ${__root_key_path} \
             ${__root_cert_path} \
             ${__key_path} \
             ${__csr_path} \
             ${__cert_path} >> /dev/null"
  __output=$( eval "$__command" )
  _error_code=$?
  rm -rf /tmp/cert-gen/
  __MSG="Command: Generate certificate for ${__dns_names} "
  __MSG+="$__output"
  if [[ "$_error_code" -eq "0" ]]; then
    _message "Generate certificate for ${__dns_names} is successfully"
  else
    _message "$__MSG" "error" "$_error_code"
    exit 1
  fi
}

function _cert_trust() {
  __root_cert_path=$1
  __command="sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain $__root_cert_path"
  __output=$( eval "$__command" )
  _error_code=$?
  __MSG="Command: Add trusted root certificate "
  __MSG+="$__output"
  if [[ "$_error_code" -eq "0" ]]; then
    _message "Root certificate successfully trusted"
  else
    _message "$__MSG" "error" "$_error_code"
    exit 1
  fi
}

function _get_all_local_dns() {
  __cert_path=$1
  __command=$(for i in $( cat "$__cert_path" | openssl x509 -text | grep DNS ); do
                echo "$i" | sed -e "s/^DNS://" -e "s/,$//"
              done)
  _error_code=$?
  # shellcheck disable=SC2086
  echo $__command
  __MSG="Command: Get all local domains name "
  __MSG+="$__command"
  if [[ "$_error_code" -gt "0" ]]; then
    _message "$__MSG" "error" "$_error_code"
    exit 1
  fi
}
