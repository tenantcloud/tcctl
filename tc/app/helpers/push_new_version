#!/usr/bin/env bash

# shellcheck disable=SC1090

source "$CLI_DIR/tc/framework/functions"

tag=

while echo "$1" | grep -q ^--; do
  __key=${1//--/}
  __key=${__key//-/_}
  if [[ -n "$2" ]]; then
    eval "${__key}"='$2'
    shift 2
  else
    set "${__key}"
    shift
  fi
done

__output=$(git add .)
_error_code=$?
__MSG="Added new files"
if [ "$_error_code" -eq "0" ]; then
  echo "$__MSG"
else
  _message "$__MSG" "error" "$_error_code"
fi

__output=$(git commit -am "release: Release ${tag}")
_error_code=$?
__MSG="Commit files. Release ${tag}"
if [ "$_error_code" -eq "0" ]; then
  _message "$__MSG"
else
  _message "$__MSG" "error" "$_error_code"
fi

__output=$(git tag -a "${tag}" -m "Release ${tag}")
_error_code=$?
__MSG="Create new tag: ${tag}"
if [ "$_error_code" -eq "0" ]; then
  _message "$__MSG"
else
  _message "$__MSG" "error" "$_error_code"
fi

__output=$(git remote get-url --push origin)
_error_code=$?
__MSG="Push code to remote repository ${__output}"
if [ "$_error_code" -eq "0" ]; then
  _message "$__MSG"
else
  _message "$__MSG" "error" "$_error_code"
fi

__output=$(git push origin "${tag}")
_error_code=$?
__MSG="Tag ${tag} pushed to remote"
if [ "$_error_code" -eq "0" ]; then
  _message "$__MSG"
else
  _message "$__MSG" "error" "$_error_code"
fi
