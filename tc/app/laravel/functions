#!/usr/bin/env bash

# shellcheck disable=SC1091

source "$CLI_DIR/tc/framework/functions"

function _get_bitbucket_access_token() {
  __token_file=token-$(date +'%Y-%m-%d_%H-%M-%S').json
  __bitbucket_client_id="$1"
  __bitbucket_client_secret="$2"
  curl -s -X POST \
      https://bitbucket.org/site/oauth2/access_token \
      -H 'Cache-Control: no-cache' \
      -H 'Content-Type: application/x-www-form-urlencoded' \
      -d "client_id=${__bitbucket_client_id}&grant_type=client_credentials&client_secret=${__bitbucket_client_secret}" \
      -o "$__token_file"
  _error_code=$?
  if [ $_error_code -eq "0" ]; then
    __access_token=$(jq -r '.access_token' "$__token_file")
    echo  "$__access_token"
    rm "$__token_file"
  else
    __MSG="Error getting bitbucket access token"
    _message "$__MSG" "error" "$_error_code"
  fi
}

function _send_pull_request() {
  __response_file=pr-$(date +'%Y-%m-%d_%H-%M-%S').json
  __site_version=$(grep "^APP_VERSION" .env | awk -F "=" '{ print $2 }')
  __bitbucket_username="$1"
  __repo_slug="$2"
  __branch_source="$3"
  __branch_destination="$4"
  __bitbucket_client_id="$5"
  __bitbucket_client_secret="$6"
  __build_data=$(cat <<EOF
{
    "title": "Automatic Pull Request. ${__repo_slug} [${__branch_source} -> ${__branch_destination}] - ${__site_version}",
    "description":  "Automatic build project ${__repo_slug}. Branch ${__branch_source} -> ${__branch_destination}",
    "source": {
        "branch": {
            "name": "${__branch_source}"
        }
    },
    "destination": {
        "branch": {
            "name": "${__branch_destination}"
        }
    }
}
EOF
)

__access_token="$(_get_bitbucket_access_token "$__bitbucket_client_id" "$__bitbucket_client_secret")"

if [ -n "$__access_token" ]; then
  __commit_api_link="https://api.bitbucket.org/2.0/repositories/${__bitbucket_username}/${__repo_slug}"
  curl -s -X POST \
"${__commit_api_link}/pullrequests?access_token=${__access_token}" \
  -H "cache-control: no-cache" \
  -H "content-type: application/json" \
  -d "${__build_data}" > "${__response_file}"
  _error_code=$?
  if [ $_error_code -eq "0" ]; then
    __pull_request_url=$(jq .links.html.href -r "${__response_file}")
    rm "${__response_file}"
    echo "$__pull_request_url"
  else
    __MSG+="Error while creating the pull request"
    _message "$__MSG" "error" "$_error_code"
  fi
else
  __MSG+="Bitbucket access token is empty"
  _message "$__MSG" "error" "$_error_code"
fi
}
