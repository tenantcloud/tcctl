#!/usr/bin/env bash

# shellcheck disable=SC1090

source "$CLI_DIR/tc/framework/functions"

while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    --db-master-name)
    DB_MASTER_NAME="$2"
    shift 2
    ;;
    --slack-channel)
    SLACK_CHANNEL="$2"
    shift 2
    ;;
    *)
    ;;
esac
done

function wait_replicas_zero_lag() {
  __db_master_name=$1
  __slack_channel=$2
  __output=$( tcctl aws get_replicas_name --db-identifier "${__db_master_name}" )
  _error_code=$?
  __MSG="Command: tcctl aws get $1 name"
  __MSG+="$__output"
  if [[ "$_error_code" -eq "0" ]]; then
    __replica_db_instances_name=$( tcctl aws get_replicas_name --db-identifier "${__db_master_name}" | grep -e "^${__db_master_name}-replica.*" )
    if [[ -z "$__replica_db_instances_name" ]]; then
      slack chat send "We were unable to find replica's DB instances and STOP deployment process on $(hostname)" "${__slack_channel}" > /dev/null
      exit
    else
    __seconds=1200
    __end_time=$(( $(date +%s) + __seconds ))
    __lag=""
    while [[ $__lag != "0" ]]
    do
      __lag=$(aws cloudwatch get-metric-statistics \
            --namespace "AWS/RDS" \
            --metric-name "ReplicaLag" \
            --start-time "$(date -d '1 min ago' +'%Y-%m-%d %H:%M:%S')" \
            --end-time "$(date +'%Y-%m-%d %H:%M:%S')" \
            --period 3600 \
            --statistics Average \
            --dimensions  Name=DBInstanceIdentifier,Value="$__replica_db_instances_name" | jq -r '.Datapoints[].Average')
      __left_time=$(( __end_time - $(date +%s) ))
      if [[ ("$__lag" -gt "$__seconds") || ("$__left_time" -lt "0") ]]; then
        slack chat send "We can't deploy on $(hostname). We waited ${__seconds} seconds. Replica LAG: $__lag" "${__slack_channel}" > /dev/null
        exit;
      fi
      echo -ne "Replica: $__replica_db_instances_name has LAG: $__lag Time: $__left_time         \r"
      sleep 1
    done
    echo
    echo "Replica $__replica_db_instances_name LAG is 0"
    fi
  else
    _message "$__MSG" "error" "$_error_code"
  fi
}

if [ -z "$DB_MASTER_NAME" ]; then
  __MSG="Command: tcctl aws wait_replicas_zero_lag missed --db-master-name"
  _message "$__MSG" "error" "$_error_code"
elif [ -z "$SLACK_CHANNEL" ]; then
  __MSG="Command: tcctl aws wait_replicas_zero_lag missed --slack-channel"
  _message "$__MSG" "error" "$_error_code"
else
  wait_replicas_zero_lag "$DB_MASTER_NAME" "$SLACK_CHANNEL"
fi
