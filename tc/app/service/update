#!/usr/bin/env bash

# shellcheck source="$CLI_DIR/tc/framework/functions"
# shellcheck source="$CLI_DIR/tc/app/aws/functions"
# shellcheck disable=SC1090

source "$CLI_DIR/tc/framework/functions"

set +e

while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    --service-name)
    SERVICE_NAME="$2"
    shift 2
    ;;
    *)
    ;;
esac
done

function update_service() {
  SERVICE_NAME=$1
  OS=$( _get_os )
  if [[ $OS == Linux ]]; then
    SUDO_COMMAND="sudo "
    __output=$( $SUDO_COMMAND "$SERVICE_NAME" update )
    export _error_code=$?
    __MSG="Command: tcctl service $1 update"
    __MSG+="$__output"
    if [[ $_error_code -eq "0" ]]; then
      $SUDO_COMMAND "$SERVICE_NAME" force-reload | column -t
    else
      _message "$__MSG" "error" "$_error_code"
    fi
  elif [[ $OS == Darwin ]]; then
    SUDO_COMMAND=""
    __output=$( $SUDO_COMMAND "$SERVICE_NAME" update )
    export _error_code=$?
    __MSG="Command: tcctl service $1 update"
    __MSG+="$__output"
    if [[ $_error_code -eq "0" ]]; then
      $SUDO_COMMAND "$SERVICE_NAME" update | column -t
    else
      _message "$__MSG" "error" "$_error_code"
    fi
  fi
}

if [ -z "$SERVICE_NAME" ]; then
  __MSG="Command: tcctl service update missed --service-name"
  _message "$__MSG" "error" "$_error_code"
else
  update_service "$SERVICE_NAME"
fi
